{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cardArray","map","user","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","my_props","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","json_users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAeeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,gBAAgBC,IAAG,+BAA0BL,EAA1B,cAC5B,sBAAKA,GAAE,UAAKC,GAAZ,UACI,6BAAKA,IACL,4BAAIC,WCWLI,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OACI,cAAC,EAAD,CAEIX,GAAIO,EAAOI,GAAOX,GAClBC,KAAMM,EAAOI,GAAOV,KACpBC,MAAOK,EAAOI,GAAOT,OAHhBS,MAMjB,OACI,8BACKH,KCCEI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,SAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,eACZC,SAAUH,OCAPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCmBJC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,EACVC,SAAUT,GAJC,E,qDAQnB,SAAkBU,EAAOC,GACrBC,KAAKC,SAAS,CAACL,UAAU,M,oBAG7B,WACI,OAAII,KAAKL,MAAMC,SACJ,iDAEJI,KAAKZ,MAAMK,a,GAjBCS,aC+CZC,G,wDAzCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKb,MAAQ,CACTlB,OAAQ,GACR6B,YAAa,IAJP,E,qDASd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,OAAI,EAAKZ,SAAS,CAACxB,OAAQoC,S,oBAOnD,WACI,MAA8Bb,KAAKL,MAA5BlB,EAAP,EAAOA,OAAQ6B,EAAf,EAAeA,YACTQ,EAAiBrC,EAAOsC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQxC,EAAO0C,OAGX,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWU,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQqC,WAP9B,oBAAIzC,UAAU,KAAd,6B,GA3BM6B,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e362fb0.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons';\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='Robot Profile' src={`https://robohash.org/${id}?200x200`}/>\n            <div id={`${name}`}>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    const cardArray = robots.map((user, index) => {\n        return (\n            <Card \n                key={index} \n                id={robots[index].id} \n                name={robots[index].name} \n                email={robots[index].email} \n            />)\n    });\n    return (\n        <div>\n            {cardArray}\n        </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\nimport 'tachyons';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className=\"pa2 tc\">\n            <input\n            className='pa3 ba b--green bg-lightest-blue'\n            type='search'\n            placeholder='search robot'\n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            my_props: props\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>ERROR DETECTED!</h1>\n        }\n        return this.props.children \n        \n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json_users => this.setState({robots: json_users}));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n    \n    render() {\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n\n        return !robots.length ? \n            <h1 className=\"tc\">Loading ...</h1> :\n        (\n            <div className=\"tc\">\n                <h1 className=\"f1\">Robofriends App</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App/>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}